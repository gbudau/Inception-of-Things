---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app3-ingress
spec:
  rules:
    - host: app3.com
      http:
        paths:
          - pathType: Prefix
            path: '/'
            backend:
              service:
                name: app3-service
                port:
                  number: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: app3-service
  labels:
    app.kubernetes.io/name: app3
    app.kubernetes.io/version: '1.10'
spec:
  type: ClusterIP
  ports:
    - port: 8080
      targetPort: 8080
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: app3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app3-deployment
  labels:
    app.kubernetes.io/name: app3
    app.kubernetes.io/version: '1.10'
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: app3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: app3
    spec:
      containers:
        - name: app3
          image: 'paulbouwer/hello-kubernetes:1.10'
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          env:
            - name: MESSAGE
              value: 'Hello from app3.'
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: KUBERNETES_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: CONTAINER_IMAGE
              value: 'paulbouwer/hello-kubernetes:1.10'
